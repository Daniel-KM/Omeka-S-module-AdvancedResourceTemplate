<?php
$translate = $this->plugin('translate');
$escape = $this->plugin('escapeHtml');
$labelInfo = $this->setting('property_label_information');

$hasSingleLabels = true;

// Check and prepare if values have multiple labels for the same property.
if (count($templateProperties)):
    $dataTypesLabels = [];
    foreach ($templateProperties as $rtp) foreach ($rtp->data() ?: [$rtp] as $rtpData) {
        $property = $rtp->property();
        $term = $property->term();
        $defaultLabel = $translate($property->label());
        $dataTypesLabels[$term]['default'] = $defaultLabel;
        $label = $rtpData->alternateLabel() ?: $defaultLabel;
        $dataTypesLabels[$term] = array_merge($dataTypesLabels[$term], array_fill_keys($rtpData->dataTypes(), $label));
        if (count(array_unique($dataTypesLabels[$term])) > 1) $hasSingleLabels = false;
    }
endif;

if ($hasSingleLabels):
// This is the default resource-values.

?>
<?php foreach ($values as $term => $propertyData): ?>
    <div class="property">
        <h4>
        <?php if ($propertyData['alternate_label']): ?>
        <?php echo $escape($propertyData['alternate_label']); ?>
        <?php else: ?>
        <?php echo $escape($translate($propertyData['property']->label())); ?>
        <?php endif; ?>
        <?php if ('term' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($term); ?>)</span>
        <?php elseif ('vocab' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($propertyData['property']->vocabulary()->label()); ?>)</span>
        <?php endif; ?>
        </h4>
        <div class="values">
        <?php foreach ($propertyData['values'] as $value): ?>
            <?php
            $valueType = $value->type();
            $class = ['value'];
            if ('resource' == $valueType || strpos($valueType, 'resource') !== false) {
                $class[] = 'resource';
                $class[] = $escape($value->valueResource()->resourceName());
            } elseif ('uri' == $valueType) {
                $class[] = 'uri';
            }
            if (!$value->isPublic()) {
                $class[] = 'private';
            }
            ?>
            <div class="<?php echo implode(' ', $class); ?>" lang="<?php echo $escape($value->lang()); ?>">
                <?php if ($language = $value->lang()): ?>
                <span class="language"><?php echo $language; ?></span>
                <?php endif; ?>
                <?php echo $value->asHtml(); ?>
            </div>
        <?php endforeach; ?>
        </div>
    </div>
<?php endforeach; ?>
<?php else:

// The template has specific labels for data types, so gather values.
// It is the same as above, except the sub-loop to get the label by data type.
$valuesWithLabel = [];
foreach ($values as $term => $propertyData) foreach ($propertyData['values'] as $value) $valuesWithLabel[$term][$dataTypesLabels[$term][$value->type()] ?? $dataTypesLabels[$term]['default'] ?? $translate($propertyData['property']->label())]['values'][] = $value;

?>
<?php foreach ($valuesWithLabel as $term => $data) foreach ($data as $label => $propertyData): ?>
    <div class="property">
        <h4>
        <?php echo $escape($label); ?>
        <?php if ('term' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($term); ?>)</span>
        <?php elseif ('vocab' === $labelInfo): ?>
        <span class="field-term">(<?php echo $escape($propertyData['property']->vocabulary()->label()); ?>)</span>
        <?php endif; ?>
        </h4>
        <div class="values">
        <?php foreach ($propertyData['values'] as $value): ?>
            <?php
            $valueType = $value->type();
            $class = ['value'];
            if ('resource' == $valueType || strpos($valueType, 'resource') !== false) {
                $class[] = 'resource';
                $class[] = $escape($value->valueResource()->resourceName());
            } elseif ('uri' == $valueType) {
                $class[] = 'uri';
            }
            if (!$value->isPublic()) {
                $class[] = 'private';
            }
            ?>
            <div class="<?php echo implode(' ', $class); ?>" lang="<?php echo $escape($value->lang()); ?>">
                <?php if ($language = $value->lang()): ?>
                <span class="language"><?php echo $language; ?></span>
                <?php endif; ?>
                <?php echo $value->asHtml(); ?>
            </div>
        <?php endforeach; ?>
        </div>
    </div>
<?php endforeach; ?>
<?php endif; ?>
